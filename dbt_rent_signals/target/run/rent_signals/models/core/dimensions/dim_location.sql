
  
    

create or replace transient table RENTS.DBT_DEV_core.dim_location
    
    
    
    as (

with location_snapshot as (
    select * from RENTS.snapshots.snap_location
),

dimension_table as (
    select
        -- Surrogate key (auto-generated by snapshot)
        md5(cast(coalesce(cast(location_business_key as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(dbt_valid_from as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as location_key,
        
        -- Business keys
        location_fips_code,
        regionid,
        location_business_key,
        
        -- Location attributes (can change over time)
        location_name,
        location_type,
        state_name,
        county_name,
        metro_name,
        size_rank,
        population,
        
        -- Derive additional geographic attributes
        case 
            when upper(state_name) = 'FLORIDA' or upper(state_name) = 'FL' then 'FL'
            when upper(state_name) = 'CALIFORNIA' or upper(state_name) = 'CA' then 'CA'
            when upper(state_name) = 'TEXAS' or upper(state_name) = 'TX' then 'TX'
            when upper(state_name) = 'NEW YORK' or upper(state_name) = 'NY' then 'NY'
            else left(upper(state_name), 2)
        end as state_code,
        
        -- Population-based metro categorization
        case 
            when population >= 5000000 then 'Major Metro (5M+)'
            when population >= 1000000 then 'Large Metro (1M-5M)'
            when population >= 250000 then 'Medium Metro (250K-1M)'
            when population < 250000 then 'Small Metro (<250K)'
            else 'Unknown Size'
        end as market_size_category,
        
        -- Size rank categorization (for Zillow data)
        case
            when size_rank <= 10 then 'Top 10 Markets'
            when size_rank <= 50 then 'Top 50 Markets'
            when size_rank <= 100 then 'Top 100 Markets'
            when size_rank <= 200 then 'Large Markets'
            else 'Small Markets'
        end as size_rank_category,
        
        -- SCD Type 2 fields from snapshot
        dbt_valid_from as effective_date,
        dbt_valid_to as end_date,
        case when dbt_valid_to is null then true else false end as is_current,
        
        -- Content hash for change detection
        location_content_hash,
        
        -- Source tracking
        source_systems,
        
        -- Metadata
        dbt_updated_at as updated_at,
        current_timestamp() as created_at,
        '2025-10-26 04:07:02.967691+00:00' as dbt_run_id
        
    from location_snapshot
)

select * from dimension_table
    )
;


  